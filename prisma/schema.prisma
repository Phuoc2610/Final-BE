// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  password String?
  firstName String?
  lastName String?
  phone String?
  address String?
    isDelete  Boolean @default(false)
  profile Profile?
  userRoles UserRole[]
  refreshToken RefreshToken?
}

model Profile{
  id String @id @default(cuid())
  fullName String
  avatarUrl String?
  dateOfBirth DateTime?
  Gender  String?
  Address String?
  user    User @relation(fields: [userId], references: [id])
  userId  String @unique
}

model UserRole{
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String 
  role Role @relation(fields: [roleId], references: [id])
  roleId String

}

model Role{
  id String @id @default(cuid())
  userRoles UserRole[]
  name String @unique
}

model RefreshToken{
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  tokenCreated String?
  tokenExpires String?
}

model Store{
  id String @id @default(cuid())
  name  String?

}

model Category{
  id String @id @default(cuid())
  name String @unique

}
model Product{
  id String @id @default(cuid())
  name  String @unique
  description   String
  viewCount String
  price Int
  isDelete  Boolean @default(false)
  productImages ProductImage[]
}

model ProductImage{
  id String @id @default(cuid())
  url String
  product Product @relation(fields: [productId], references: [id])
  productId String
}

model Order{
  id String @id @default(cuid())
  storeId  String
  totalPrice Int
  
}

model OrderDetails{
 id String @id @default(cuid())
}
